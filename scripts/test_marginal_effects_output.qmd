---
title: "Marginal Effects in Python"

format:
  html:
    embed-resources: true
    toc: true
    number-sections: true


#format: html

execute: 
  echo: false
  warning: false
jupyter: iprism

---


```{python}
from marginaleffects import *

import statsmodels.api as sm
import statsmodels.formula.api as smf
```

```{python}
data = get_dataset("thornton")

```

```{python}
mod = smf.ols("outcome ~ incentive + distance", data).fit()

plot_predictions(mod, condition = ["distance", "incentive"])
```


```{python}
# import sys
# import subprocess
# subprocess.check_call([sys.executable, "-m", "pip", "install", "faker"])
```


```{python}
import polars as pl
import numpy as np
import statsmodels.formula.api as smf
from marginaleffects import *

mtcars = pl.read_csv("https://vincentarelbundock.github.io/Rdatasets/csv/datasets/mtcars.csv")

mod = smf.ols("mpg ~ hp * wt * am", data = mtcars).fit()
```


```{python}
pre = predictions(mod)

mtcars.shape
```


```{python}
pre
```


```{python}
mod.summary()
```